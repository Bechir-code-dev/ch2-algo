Algorithm Insert_Sort

FUNCTION insertionSort(VAR arr: ARRAY_OF INTEGER) : ARRAY_OF INTEGER;
VAR
     i,key,j:INTEGER;
     n:INTEGER:= length(arr);
BEGIN
    FOR i FROM 1 TO n-1 STEP 1  DO
    key:=arr[i];
    j:=i-1;
    WHILE (j>=0 and arr[j]>key) DO
        arr[j+1]:=arr[j];
        j:=j-1;
    END_WHILE
     arr[j+1]:=key;
END_FOR
    RETURN arr ;
END

// function insertionSort(arr) {
//     for (let i = 1; i < arr.length; i++) {
//         let key = arr[i];
//         let j = i - 1;

//         /* Move elements of arr[0..i-1], that are
//            greater than key, to one position ahead
//            of their current position */
//         while (j >= 0 && arr[j] > key) {
//             arr[j + 1] = arr[j];
//             j = j - 1;
//         }
//         arr[j + 1] = key;
//     }
// }